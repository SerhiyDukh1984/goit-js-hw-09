{"mappings":"YAAA,IAAMA,EAASC,SAASC,cAAc,SAIhCC,GAHUF,SAASC,cAAc,kBACxBD,SAASC,cAAc,iBACrBD,SAASC,cAAc,mBACpBD,SAASC,cAAc,WAEvCE,EAAQ,KACRC,EAAO,KACPC,EAAS,GACTC,EAAW,EAEfP,EAAOQ,iBAAiB,UAExB,SAAuBC,GACrBA,EAAEC,iBACFP,EAAYQ,UAAW,EAEvB,IAAMC,EAAQH,EAAEI,cAAcC,SAE9BV,EAAQW,OAAOH,EAAMI,MAAMC,OAC3BZ,EAAOU,OAAOH,EAAMM,KAAKD,OAGzB,IAFA,IAAIE,EAAaJ,OAAOH,EAAMQ,OAAOH,OAE5BI,EAAI,EAAGA,GAAKF,EAAYE,GAAK,EACpCf,EAAOgB,KAAKD,GAGdf,EAAOiB,KAAI,SAAAC,GAiBb,IAAuBC,EAAUC,EAfZ,KADjBnB,EAAWiB,KAETpB,GAASC,IAcQoB,EAXLlB,EAWemB,EAXLtB,EAYnB,IAAIuB,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEM,SAAAT,EAAUT,MAAAU,IAEpBG,EAAO,CAAEK,SAAAT,EAAUT,MAAAU,MAEpBA,OAnBAS,MAAK,SAAAC,G,IAAGC,EAAQD,EAARF,SAAUI,EAAKF,EAALpB,MACjBuB,QAAQC,IAAI,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,UAG3DI,OAAM,SAAAN,G,IAAGO,EAAQP,EAARF,SAAUU,EAAKR,EAALpB,MAClBuB,QAAQC,IAAI,sBAAqCC,OAAfE,EAAS,QAAYF,OAANG,EAAM,gB","sources":["src/js/03-promises.js"],"sourcesContent":["const formEl = document.querySelector('.form');\nconst delayEl = document.querySelector('[name=\"delay\"]');\nconst stepEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"amount\"]');\nconst btnSubmitEl = document.querySelector('button');\n\nlet delay = null;\nlet step = null;\nlet amount = [];\nlet position = 0;\n\nformEl.addEventListener('submit', onSubmitClick);\n\nfunction onSubmitClick(e) {\n  e.preventDefault();\n  btnSubmitEl.disabled = true;\n\n  const input = e.currentTarget.elements;\n\n  delay = Number(input.delay.value);\n  step = Number(input.step.value);\n  let inputValue = Number(input.amount.value);\n\n  for (let i = 1; i <= inputValue; i += 1) {\n    amount.push(i);\n  }\n\n  amount.map(number => {\n    position = number;\n    if (position !== 1) {\n      delay += step;\n    }\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  });\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$btnSubmitEl","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$position","addEventListener","e","preventDefault","disabled","input","currentTarget","elements","Number","delay","value","step","inputValue","amount","i","push","map","number","position3","delay3","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","then","param","position1","delay1","console","log","concat","catch","position2","delay2"],"version":3,"file":"03-promises.d0dc6fdc.js.map"}