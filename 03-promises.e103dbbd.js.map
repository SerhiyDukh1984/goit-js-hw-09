{"mappings":"YAAA,IAAMA,EAASC,SAASC,cAAc,QAChCC,EAAeH,EAAOI,SAASC,MAC/BC,EAASN,EAAOI,SAASG,KACzBC,EAAWR,EAAOI,SAASK,OAC3BC,EAAWT,SAASC,cAAc,UAexC,SAASS,EAAUC,G,IAAEC,EAAFD,EAAEC,SAAUR,EAAZO,EAAYP,MAC7BS,QAAQC,IAAI,uBAAwCC,OAAfH,EAAS,QAAYG,OAANX,EAAM,OAE5D,SAASY,EAAQL,G,IAAEC,EAAFD,EAAEC,SAAUR,EAAZO,EAAYP,MAC3BS,QAAQC,IAAI,sBAAqCC,OAAfH,EAAS,QAAYG,OAANX,EAAM,OAGzD,SAASa,EAAcC,EAAUd,GAC/B,OAAO,IAAIe,SAAQ,SAACC,EAASC,GAC3BC,UAAYC,YAAW,WACrB,IACIC,EAAU,EACd,GAAIA,EAAUjB,EAGZ,OAFAkB,aAAaH,gBACbb,EAASiB,UAAW,GAKtBF,EAAU,EAFYG,KAAKC,SAAW,GAIpCR,EAAQ,CAAER,SAHD,EAGWR,UAEpBiB,EAAO,CAAET,SALA,EAKUR,YAEpBA,MAtCPL,EAAO8B,iBAAiB,UAExB,SAAuBC,GACrBrB,EAASiB,UAAW,EACpBI,EAAEC,iBAGF,IAFA,IAAI3B,EAAQ4B,OAAO9B,EAAa+B,OAEvBC,EAAI,EAAGA,GAAK3B,EAAS0B,MAAOC,GAAK,EACxCjB,EAAciB,EAAG9B,GAAO+B,KAAKzB,GAAW0B,MAAMpB,GAC9CZ,GAAS4B,OAAO3B,EAAO4B,U","sources":["src/js/03-promises.js"],"sourcesContent":["const formEl = document.querySelector('form');\nconst firstDelayEl = formEl.elements.delay;\nconst stepEl = formEl.elements.step;\nconst amountEl = formEl.elements.amount;\nconst buttonEl = document.querySelector('button');\n\nformEl.addEventListener('submit', onSubmitClick);\n\nfunction onSubmitClick(e) {\n  buttonEl.disabled = true;\n  e.preventDefault();\n  let delay = Number(firstDelayEl.value);\n\n  for (let i = 1; i <= amountEl.value; i += 1) {\n    createPromise(i, delay).then(onSuccess).catch(onError);\n    delay += Number(stepEl.value);\n  }\n}\n\nfunction onSuccess({ position, delay }) {\n  console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\nfunction onError({ position, delay }) {\n  console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    timeoutId = setTimeout(() => {\n      let position = 0;\n      let counter = 0;\n      if (counter > amountEl) {\n        clearTimeout(timeoutId);\n        buttonEl.disabled = false;\n        return;\n      }\n      const shouldResolve = Math.random() > 0.3;\n      position = +1;\n      counter = +1;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$firstDelayEl","elements","delay","$ce04d3a99e08e73b$var$stepEl","step","$ce04d3a99e08e73b$var$amountEl","amount","$ce04d3a99e08e73b$var$buttonEl","$ce04d3a99e08e73b$var$onSuccess","param","position","console","log","concat","$ce04d3a99e08e73b$var$onError","$ce04d3a99e08e73b$var$createPromise","position1","Promise","resolve","reject","timeoutId","setTimeout","counter","clearTimeout","disabled","Math","random","addEventListener","e","preventDefault","Number","value","i","then","catch"],"version":3,"file":"03-promises.e103dbbd.js.map"}